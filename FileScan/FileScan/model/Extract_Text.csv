File Name,Content
What is object-oriented programming.pdf,"What is object -oriented programming?  Object -oriented programming (OOP) is a computer programming model that organizes software design around data, or objects, rather than functions and logic. An object can be defin ed as a data field that has unique attributes and behavior.  OOP focuses on the objects that developers want to manipulate rather than the logic required to manipulate them. This approach to programming is well -suited for programs that are large, complex an d actively updated or maintained. This includes programs for manufacturing and design, as well as mobile applications; for example, OOP can be used for manufacturing system simulation software.  The organization of an object -oriented program also makes the method beneficial to collaborative development, where projects are divided into groups. Additional benefits of OOP include code reusability, scalability and efficiency.  The first step in OOP is to collect all of the objects a programmer wants to manipulate  and identify how they relate to each other -- an exercise known as  data modeling . Examples of an object can range from physical entities, such as a human being who is described by properties like name and address, to small computer programs, such as widgets . Once an obj ect is known, it is labeled with a  class  of objects that defines the kind of data it contains and any logic sequences that can manipulate it. Each distinct logic sequence is known as a meth od. Objects can communicate with well -defined interfaces called messages.  What is the structure of object -oriented programming?  The structure, or building blocks, of object -oriented programming include the following:  "
Criticism of OOP.pdf,"The object -oriented programming model ha s been criticized by developers for multiple reasons. The largest concern is that OOP overemphasizes the data component of software development and does not focus enough on computation or algorithms. Additionally, OOP code may be more complicated to write and take longer to compile.  Alternative methods to OOP include:  • Functional programming.  This includes languages such as Erlang and Scala, which are used for telecommunications and fault tolerant systems.  • Structured or modular programming.  This includes lan guages such as PHP and C#.  • Imperative programming . This alternative to OOP focuses on function rather than models and includes C++ and Java.  • Declarative programming . This programming method involves statements on what the task or desired outcome is but not how to achieve it. Languages include Prolog and Lisp.  • Logical programming.  This method, which is based mostly in formal logic and uses languages such as Prolog, contains a set of sentences that express facts or rules about a problem domain. It focuses on tasks that can benefit from rule -based logical queries.  Most advanced progr amming languages enable developers to combine models, because they can be used for different programming methods. For example, JavaScript can be used for OOP and functional programming.  Developers who are working with OOP and microservices can address common microservices issues by  applying the principles of OOP.   "
OOP Basics.pdf,"Object -oriented programming (OOP) is a programming paradigm based on the concept of ""objects"", which can contain data and code. The data is in the form of fields (often known as attributes or properties), and the code is in the form of procedures (often known as methods).   A common feature of objects is that procedures (or methods) are attached to them and can access and modify the object's data fields. In this brand of OOP, there is usually a special name such as this or self used to refer to the current  object. In OOP, computer programs are designed by making them out of objects that interact with one another.[1][2] OOP languages are diverse, but the most popular ones are class -based, meaning that objects are instances of classes, which also determine th eir types.   Many of the most widely used programming languages (such as C++, Java, Python, etc.) are multi -paradigm and they support object -oriented programming to a greater or lesser degree, typically in combination with imperative, procedural programming .  Significant object -oriented languages include: Ada, ActionScript, C++, Common Lisp, C#, Dart, Eiffel, Fortran 2003, Haxe, Java, JavaScript, Kotlin, logo, MATLAB, Objective -C, Object Pascal, Perl, PHP, Python, R, Raku, Ruby, Scala, SIMSCRIPT, Simula, Sma lltalk, Swift, Vala and Visual Basic.NET.  "
Principles of OOP.pdf,"What are the main principles of OOP?  Object-oriented programming is based on the following principles:  • Encapsulation.  This principle states that all important information is contained inside an object and only select information is exposed. The implementation and state of each object are private ly held inside a defined class. Other objects do not have access to this class or the authority to make changes. They are only able to call a list of public functions or methods. This characteristic of data hiding provides greater program security and avoi ds unintended data corruption.  • Abstraction.  Objects only reveal internal mechanisms that are relevant for the use of other objects, hiding any unnecessary implementation code. The derived class can have its functionality extended. This concept can help dev elopers more easily make additional changes or additions over time.  • Inheritance . Classes can reuse code from other classes. Relationships and subclasses between objects can be assigne d, enabling developers to reuse common logic while still maintaining a unique hierarchy. This property of OOP forces a more thorough data analysis, reduces development time and ensures a higher level of accuracy.  • Polymorphism . Objects are designed to share behaviors and they can take on more than one form. The program will determine which meaning or usage is necessary for each execution of that object from a parent class, reducing the  need to duplicate code. A child class is then created, which extends the functionality of the parent class. Polymorphism allows different types of objects to pass through the same interface.   "
Oracle Basics.pdf,"Introduction to  Oracle  Oracle is a product from Oracle corporation that provides a relational database management system. RDBM S supports any kind of data model. It has different product editions, including Standard Edition, Enterprise Edition, Express Edition, and Personal Edition. Oracle products are scalable and secure, with high -performance ability.  What is Oracle?  Its database is also known as Oracle. It is a multi -model relational database management system, mainly designed for enterprise  grid computing  and data warehousing.  Its database currently comes  in five different editions based on the available features.  • Standard Edition One: It is suitable for single -server or highly branched business applications with limited features.  "
Benifits of OOP.pdf,"Benefits of OOP include:  • Modularity.  Encapsulation enables objects to be self -contained, making troubleshooting and collaborative development easier.  • Reusability.  Code can be reused through inheritance, meaning a team does not have to write the same code multiple times.  • Productivity.  Programm ers can construct new programs quicker through the use of multiple libraries and reusable code.  • Easily upgradable and scalable.  Programmers can implement system functionalities independently.  • Interface descriptions.  Descriptions of external systems are sim ple, due to message passing techniques that are used for objects communication.  • Security.  Using encapsulation and abstraction, complex code is hidden, software maintenance is easier and  internet protocols  are protected.  • Flexibility.  Polymorphism enables a single function to adapt to the class it is placed in. Different objects can also pass through the same interface.   "
CS Basics.pdf,"Computer  programming is the process of performing a particular computation (or more generally, accomplishing a specific computing result), usually by designing and building an executable computer program. Programming involves tasks such as analysis, generating alg orithms, profiling algorithms' accuracy and resource consumption, and the implementation of algorithms (usually in a chosen programming language, commonly referred to as coding).[1][2] The source code of a program is written in one or more languages that a re intelligible to programmers, rather than machine code, which is directly executed by the central processing unit. The purpose of programming is to find a sequence of instructions that will automate the performance of a task (which can be as complex as a n operating system) on a computer, often for solving a given problem. Proficient programming thus usually requires expertise in several different subjects, including knowledge of the application domain, specialized algorithms, and formal logic.   Tasks accompanying and related to programming include testing, debugging, source code maintenance, implementation of build systems, and management of derived artifacts, such as the machine code of computer programs. These might be considered part of the pr ogramming process, but often the term software development is used for this larger process with the term programming, implementation, or coding reserved for the actual writing of code. Software engineering combines engineering techniques with software deve lopment practices. Reverse engineering is a related process used by designers, analysts, and programmers to understand an existing program and re -implement its function.    "
Benifits of Oracle.pdf,"1. Performance:   It has methodo logies and principles to achieve high performance. We can implement performance tuning in its database to retrieve and alter data faster, in order to improve query execution time and hence application operations.  2. Multiple Database:   Its database support s managing multiple database instances on a single server. It provides an Instance Caging method to manage CPU allocations on a server running the database instances. Instance caging works with the database resource manager to manage services over multiple  instances.  3. Editions:   As we discussed above, about the different editions Oracle offers, it benefits the users to purchase editions as per their application requirements. They can seamlessly update the edition if their requirements change in the future . If you want to learn and do some hands -on Oracle, you can download and install the express edition database which is absolutely free.  "
